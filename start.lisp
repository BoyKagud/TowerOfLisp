#!/usr/bin/clisp
(defvar towera `(1 2 3 4 5))
(defvar towerb ())
(defvar towerc ())

(defvar movesMade 0)
(defvar minMoves 0)
(defvar numDisks 3)
(defvar iterator 0)

(defun initializeDisks (x)
	(setq numDisks x)
	(setq towera '())
	(loop 
		(setq iterator (+ iterator 1))
		(setq towera (append towera (list iterator)))
		(when (>= iterator x) (return iterator))
		)
	)

(defun move (t1 t2)
	(setq towerFrom (getTower t1))
	(setq towerTo (getTower t2))
	(setq item (last towerFrom))
	(setq towerFrom (spliceEndOfList towerFrom))
	(setq towerTo (append towerTo item))
	(setTower t1 towerFrom)
	(setTower t2 towerTo)
	)

(defun spliceEndOfList (l)
	(setq loopend (- (length l) 1))
	(setq iterator 0)
	(setq newlist ())
	(loop 
		(setq newlist (append newlist (list (nth iterator l))))
		(setq iterator (+ iterator 1))
		(when (>= iterator loopend) (return iterator))
		)
	(return-from spliceEndOfList newlist)
	)

(defun getTower (tname)
	(if (string= tname 'A)
		(return-from getTower towera)
		)
	(if (string= tname 'B)
		(return-from getTower towerb)
		)
	(if (string= tname 'C)
		(return-from getTower towerc)
		)
	)

(defun setTower (tower disks)
	(if (string= tower 'A)
		(setq towera disks)
		)
	(if (string= tower 'B)
		(setq towerb disks)
		)
	(if (string= tower 'C)
		(setq towerc disks)
		)
	)

(defun displayTowers ()
	(format t "A = ~2d" towera)
	(terpri)
	(format t "B = ~2d" towerb)
	(terpri)
	(format t "C = ~2d" towerc)
	(terpri)
	)

(write numDisks)
(initializeDisks 5)
(terpri)
; (write towera)
; (terpri)
; (write (length towera))
(move 'A 'B)
(move 'A 'C)
(spliceEndOfList towera)
(displayTowers)