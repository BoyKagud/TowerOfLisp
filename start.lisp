;
; Submission for IT240
; Group of: Mong, Jon, Grace
;
(setq towera ())
(setq towerb ())
(setq towerc ())

(setq movesMade 0)
(setq minMoves 0)
(setq numDisks 3)
(setq iterator 0)

(setq isRunning 1)

(defun initializeDisks (x)
	(setq numDisks x)
	(setq towera ())
	(loop 
		(setq iterator (+ iterator 1))
		(setq towera (append towera (list iterator)))
		(when (>= iterator x) (return iterator))
		)
	(setq towera (reverse towera))
	)

(defun move (t1 t2)
	(setq towerFrom (getTower t1))
	(setq towerTo (getTower t2))
	(setq item (last towerFrom))
	(setq stackTop (nth 0 (last towerFrom)))
	(setq stackBottom (nth 0 (last towerTo)))
	(if (not stackTop)
		(return-from move)
		)
	(if (and stackBottom stackTop)
		(if (< stackBottom stackTop)
			(return-from move)
			)
		)
	(setq towerFrom (spliceEndOfList towerFrom))
	(setq towerTo (append towerTo item))
	(setTower t1 towerFrom)
	(setTower t2 towerTo)
	(checkSuccess)
	)

(defun spliceEndOfList (l)
	(if (= (length l) 1)
		(return-from spliceEndOfList)
		)
	(setq loopend (- (length l) 1))
	(setq newlist ())
	(loop 
		(setq newlist (append newlist (list (nth iterator l))))
		(setq iterator (+ iterator 1))
		(when (>= iterator loopend) (return iterator))
		)
	(return-from spliceEndOfList newlist)
	)

(defun getTower (tname)
	(if (string= tname 'A)
		(return-from getTower towera)
		)
	(if (string= tname 'B)
		(return-from getTower towerb)
		)
	(if (string= tname 'C)
		(return-from getTower towerc)
		)
	)

(defun setTower (tower disks)
	(if (string= tower 'A)
		(setq towera disks)
		)
	(if (string= tower 'B)
		(setq towerb disks)
		)
	(if (string= tower 'C)
		(setq towerc disks)
		)
	)

(defun displayTowers ()
	(format t "A = ~2d" towera)
	(terpri)
	(format t "B = ~2d" towerb)
	(terpri)
	(format t "C = ~2d" towerc)
	(terpri)
	)

(defun checkSuccess()
	(setq isSuccess 0)
	(setq numc (length towerc))
	(if (= numc numDisks)
		(setq isSuccess 1)
		)
	(if (= isSuccess 1)
		(setq isRunning 0)
		)
	)

(format t "Enter Disk Number: ")
(setq dnum (read))
(initializeDisks dnum)
(terpri)
(displayTowers)

(setq minMoves (- (expt 2 dnum) 1))

(loop
	(format t "Minimum moves needed: ~2d " minMoves)
	(terpri)
	(format t "Enter next move (ie 'AB'): ")
	(setq input (string (read)))
	(move (char input 0) (char input 1))
	(displayTowers)
	(when (= isRunning 0) (return isRunning))
	)
(terpri)
(terpri)
(format "CONGRATULATIONS!")